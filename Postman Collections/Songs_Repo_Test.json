{
	"info": {
		"_postman_id": "894b3cb6-3f3c-4fc8-a81f-fa2f32f113fa",
		"name": "MOCK Server Songs",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "TimeFilter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35d444cc-e9ef-45e3-868c-674c9af26533",
						"exec": [
							"const songs = pm.response.json().songs;\r",
							"const allFilters = pm.collectionVariables.get(\"allFilters\");\r",
							"\r",
							"let anyCharacterMatch = \".*\";\r",
							"\r",
							"songs.forEach(song => {\r",
							"    (song => {\r",
							"        const songStr = JSON.stringify(song);\r",
							"        console.log(songStr);\r",
							"        allFilters.forEach(filter => {\r",
							"            let filterType = filter.match(/(?=.)\\w*(?=\\=)/);\r",
							"            let value = filter.match(/[^=]*$/);\r",
							"            let pattern = new RegExp(`${filterType}${anyCharacterMatch}${value}`);\r",
							"            pm.test(`Song should return song with property ${filterType} and value ${value}`, function () {\r",
							"                pm.expect(songStr).to.match(pattern);\r",
							"            });\r",
							"        });\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "77b3e8d6-c773-4c0c-bb1e-3d0746abba43",
						"exec": [
							"const filters = pm.iterationData.get(\"filters\");\r",
							"\r",
							"pm.collectionVariables.set(\"allFilters\", filters);\r",
							"\r",
							"pm.request.url.addQueryParams(filters);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "cd7da24e-bad8-40c3-b76a-5ee7f5d0b6fe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{url}}/songs"
			},
			"response": [
				{
					"id": "428585c2-157a-4cad-b33b-7cfcd2a56a3a",
					"name": "time male",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/songs?properties.time=3:45&gender=male",
							"host": [
								"{{url}}"
							],
							"path": [
								"songs"
							],
							"query": [
								{
									"key": "properties.time",
									"value": "3:45"
								},
								{
									"key": "gender",
									"value": "male",
									"type": "text"
								}
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"responseTime": null,
					"body": "{\r\n    \"songs\": [\r\n        {\r\n            \"id\": 1,\r\n            \"gender\":\"male\",\r\n            \"title\": \"My way\",\r\n            \"singer\": \"Frank Sinatra\",\r\n            \"properties\":{\r\n                \"time\": \"3:45\",\r\n                \"year\": \"1955\"\r\n            }\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "songs",
			"id": "533311c0-d490-43ed-9283-a4cdf409709a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{url}}/songs"
			},
			"response": [
				{
					"id": "022811db-d5f3-4a22-966b-45f78b0a093f",
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{url}}/songs"
					},
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"songs\": [\n        {\n            \"id\": 1,\n            \"title\": \"My way\",\n            \"singer\": \"Frank Sinatra\",\n            \"properties\":{\n                \"time\": \"3:45\",\n                \"year\": \"1955\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"title\": \"New York, New York\",\n            \"singer\": \"Frank Sinatra\",\n            \"properties\":{\n                \"time\": \"4:15\",\n                \"year\": \"1955\"\n            }\n        },\n        {\n            \"id\": 3,\n            \"title\": \"Girl on fire\",\n            \"singer\": \"Alicia Keys\",\n            \"properties\":{\n                \"time\": \"3:55\",\n                \"year\": \"2010\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"title\": \"Love on top\",\n            \"singer\": \"Beyonce\",\n            \"properties\":{\n                \"time\": \"3:55\",\n                \"year\": \"2006\"\n            }\n        }\n    ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fd6283d3-a1e9-49d7-8cb0-bf58744546ce",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f5cedbe4-2c86-44d4-b9c0-7b70e9726d6d",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "131869f7-4655-4a03-a813-0dd1c616a53d",
			"key": "url",
			"value": "https://554dc223-38a6-4f43-b633-b9e6638fdc76.mock.pstmn.io"
		},
		{
			"id": "f8213a01-1338-48d6-9f09-9e40454958e3",
			"key": "allFilters",
			"value": ""
		}
	]
}